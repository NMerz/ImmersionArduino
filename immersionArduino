#include <SimpleTimer.h>
#include <Stepper.h>

int time = 0;
const int outputOn = 7;
const int outputDirection = 8;
const int sensorPin = 0;
bool retracting = false;
SimpleTimer timer;
int currentPosition = 0;
int stepsToLower = 100;
int moveDirection = 1;
int maxPosition = 1000;
bool moving = false;
Stepper actuator(24, 8, 9, 10, 11);

void setup() {
  // put your setup code here, to run once:
  pinMode(13, OUTPUT);
  pinMode(sensorPin, INPUT);
  pinMode(outputOn, OUTPUT);
  pinMode(outputDirection, OUTPUT);
  currentPosition = analogRead(sensorPin); 
  Serial.begin(9600);
  Serial.println("starting");

}

void loop() {
  timer.run();
  // put your main code here, to run repeatedly:
  if (Serial.available() > 0) {
    String input = Serial.readString();
    Serial.print("I received: ");
    Serial.println(input);
    moving = !moving; 
    Serial.println(moving);
    time = input.toInt();
    if (time < 0){
      retracting = true;
      time = time *-1;
    }
    Serial.println(time);
  }
  if (moving == true){
    if(currentPosition % 1000 == 0) {
      Serial.print("running");
     }
    actuator.step(1*moveDirection);
    currentPosition += moveDirection;
  }
  if (time>0){ // make sure to double check that you can't set double timers.
    //timer.deleteTimer(1);  causes compile error
    timer.setTimeout(time, timerDone);
    time = 0;
  }
  if (retracting == true){
    if (currentPosition >= maxPosition-10){ //replace 1000 with max position
      Serial.println("stopping at end");
      stopMove();
    }
  }
}

void timerDone() {
  //digitalWrite(13, HIGH);
  Serial.print("Timer Done");
  moving = false;
}

void startMove(bool up){
  // Digital write to two relay pin to move up and down
  if (up==true){
    digitalWrite(outputDirection, HIGH);//digital writes should be redone
    moveDirection = 1;
  }
  digitalWrite(outputOn, HIGH);
  moveDirection = -1;
}

void stopMove() {
  digitalWrite(outputOn, LOW);//digital writes should be redone
  digitalWrite(outputDirection, LOW);
  moving = false;
  retracting = false;
}

void retract(){
  startMove(false);
  retracting = true;
}
